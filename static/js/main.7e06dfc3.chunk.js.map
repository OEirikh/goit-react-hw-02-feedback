{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/Statistics/Statistics.jsx","App.jsx","index.js","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.module.css"],"names":["FeedbackOptions","options","onLeaveFeeedback","className","s","list","Object","keys","map","key","item","button","type","onClick","id","Section","title","children","section","Statistics","good","neutral","bad","total","positivePercentage","App","state","updateQuantityFeedbeacks","e","target","setState","ps","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mPACe,SAASA,EAAT,GAAyD,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,iBACjD,OACE,8BACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACGC,OAAOC,KAAKN,GAASO,KAAI,SAACC,GAAD,OACxB,oBAAcN,UAAWC,IAAEM,KAA3B,SACE,wBACEP,UAAWC,IAAEO,OACbC,KAAK,SACLC,QAASX,EACTY,GAAIL,EAJN,SAMGA,KAPIA,U,oBCWJM,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,sBAAKd,UAAWC,IAAEc,QAAlB,UACGF,GAAS,6BAAKA,IACdC,MCLQ,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,yCAAYJ,KACZ,4CAAeC,KACf,wCAAWC,KACX,0CAAaC,KACb,sDAAyBC,EAAmBD,GAA5C,U,ICVAE,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,yBAA2B,SAACC,GAC1B,IAAMnB,EAAMmB,EAAEC,OAAOf,GACrB,EAAKgB,UAAS,SAACC,GAAD,sBAAYtB,EAAMsB,EAAGtB,GAAO,O,EAG5CuB,mBAAqB,kBACnB1B,OAAO2B,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAEhEC,gCAAkC,SAACd,GAAD,gBAC7Be,KAAKC,MAAO,EAAKb,MAAMN,KAAOG,EAAS,O,4CAE5C,WACE,MAA+BiB,KAAKd,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAErBK,EAGEa,KAHFb,yBACAK,EAEEQ,KAFFR,mBACAK,EACEG,KADFH,gCAEId,EAAQS,IAEd,OACE,gCACE,cAAC,EAAD,CAAShB,MAAM,yBAAf,SACE,cAAChB,EAAD,CACEC,QAASuC,KAAKd,MACdxB,iBAAkByB,MAItB,cAAC,EAAD,CAASX,MAAM,aAAf,SACE,cAACG,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBa,a,GA1CdI,aAiDHhB,IClDfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,OAAS,kC,kBCArGD,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.7e06dfc3.chunk.js","sourcesContent":["import s from \"./FeedbackOptions.module.css\";\nexport default function FeedbackOptions({ options, onLeaveFeeedback }) {\n  return (\n    <div>\n      <ul className={s.list}>\n        {Object.keys(options).map((key) => (\n          <li key={key} className={s.item}>\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={onLeaveFeeedback}\n              id={key}\n            >\n              {key}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","// import s from \"./Statistics.module.css\";\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div>\n      <span>Good:{good}</span>\n      <span>Neutral:{neutral}</span>\n      <span>Bad:{bad}</span>\n      <span>Total:{total}</span>\n      <span>Positive Feedback:{positivePercentage(total)}%</span>\n    </div>\n  );\n}\n","import { Component } from \"react\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Components/Section/Section\";\nimport Statistics from \"./Components/Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  updateQuantityFeedbeacks = (e) => {\n    const key = e.target.id;\n    this.setState((ps) => ({ [key]: ps[key] + 1 }));\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\n\n  countPositiveFeedbackPercentage = (total) =>\n    `${Math.round((this.state.good / total) * 100)}`;\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const {\n      updateQuantityFeedbeacks,\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n    } = this;\n    const total = countTotalFeedback();\n\n    return (\n      <div>\n        <Section title=\"Please leave feedbeack\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeeedback={updateQuantityFeedbeacks}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2PrDT\",\"item\":\"FeedbackOptions_item__3jTQi\",\"button\":\"FeedbackOptions_button__1cNrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__snUHO\"};"],"sourceRoot":""}