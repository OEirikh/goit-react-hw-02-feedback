{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/Statistics/Statistics.jsx","Components/NotificationMessage/NotificationMessage.jsx","App.jsx","index.js","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.module.css","Components/Statistics/Statistics.module.css"],"names":["FeedbackOptions","options","onLeaveFeeedback","className","s","list","Object","keys","map","key","item","button","type","onClick","id","Section","title","children","section","Statistics","good","neutral","bad","total","positivePercentage","statistics","NotificationMessage","message","App","state","updateQuantityFeedbeacks","e","target","setState","ps","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oPAGe,SAASA,EAAT,GAAyD,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,iBACjD,OACE,8BACE,oBAAIC,UAAWC,IAAEC,KAAjB,SACGC,OAAOC,KAAKN,GAASO,KAAI,SAACC,GAAD,OACxB,oBAAcN,UAAWC,IAAEM,KAA3B,SACE,wBACEP,UAAWC,IAAEO,OACbC,KAAK,SACLC,QAASX,EACTY,GAAIL,EAJN,SAMGA,KAPIA,U,oBCSJM,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,sBAAKd,UAAWC,IAAEc,QAAlB,UACGF,GAAS,6BAAKA,IACdC,M,gBCJQ,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,sBAAKrB,UAAWC,IAAEqB,WAAlB,UACE,0CAAaL,KACb,6CAAgBC,KAChB,yCAAYC,KACZ,2CAAcC,KACd,uDAA0BC,EAAmBD,SCdnD,IACeG,EADa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCI3CC,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,yBAA2B,SAACC,GAC1B,IAAMtB,EAAMsB,EAAEC,OAAOlB,GACrB,EAAKmB,UAAS,SAACC,GAAD,sBAAYzB,EAAMyB,EAAGzB,GAAO,O,EAG5C0B,mBAAqB,kBACnB7B,OAAO8B,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAEhEC,gCAAkC,SAACjB,GAAD,gBAC7BkB,KAAKC,MAAO,EAAKb,MAAMT,KAAOG,EAAS,KADV,M,4CAGlC,WACE,MAA+BoB,KAAKd,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAErBQ,EAGEa,KAHFb,yBACAK,EAEEQ,KAFFR,mBACAK,EACEG,KADFH,gCAEIjB,EAAQY,IAEd,OACE,gCACE,cAAC,EAAD,CAASnB,MAAM,yBAAf,SACE,cAAChB,EAAD,CACEC,QAAS0C,KAAKd,MACd3B,iBAAkB4B,MAItB,cAAC,EAAD,CAASd,MAAM,aAAf,SACGO,EACC,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBgB,IAGtB,cAAC,EAAD,CAAqBb,QAAQ,kC,GA9CvBiB,aAqDHhB,ICvDfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,OAAS,kC,kBCArGD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,WAAa,kC","file":"static/js/main.e7ef3489.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nimport s from \"./FeedbackOptions.module.css\";\nexport default function FeedbackOptions({ options, onLeaveFeeedback }) {\n  return (\n    <div>\n      <ul className={s.list}>\n        {Object.keys(options).map((key) => (\n          <li key={key} className={s.item}>\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={onLeaveFeeedback}\n              id={key}\n            >\n              {key}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.string.isRequired,\n    neutral: PropTypes.string.isRequired,\n    bad: PropTypes.string.isRequired,\n  }),\n  onLeaveFeeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className={s.statistics}>\n      <span>Good: {good}</span>\n      <span>Neutral: {neutral}</span>\n      <span>Bad: {bad}</span>\n      <span>Total: {total}</span>\n      <span>Positive Feedback: {positivePercentage(total)}</span>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nconst NotificationMessage = ({ message }) => <p>{message}</p>;\nexport default NotificationMessage;\n\nNotificationMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { Component } from \"react\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Components/Section/Section\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport NotificationMessage from \"./Components/NotificationMessage/NotificationMessage\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  updateQuantityFeedbeacks = (e) => {\n    const key = e.target.id;\n    this.setState((ps) => ({ [key]: ps[key] + 1 }));\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\n\n  countPositiveFeedbackPercentage = (total) =>\n    `${Math.round((this.state.good / total) * 100)}%`;\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const {\n      updateQuantityFeedbeacks,\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n    } = this;\n    const total = countTotalFeedback();\n\n    return (\n      <div>\n        <Section title=\"Please leave feedbeack\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeeedback={updateQuantityFeedbeacks}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <NotificationMessage message=\"There is no feedback\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2PrDT\",\"item\":\"FeedbackOptions_item__3jTQi\",\"button\":\"FeedbackOptions_button__1cNrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__snUHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2337R\"};"],"sourceRoot":""}